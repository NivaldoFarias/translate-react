name: Sync and Translate

on:
  # Manual trigger with environment selection
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment environment"
        required: true
        type: choice
        options:
          - development
          - production
        default: development

  # Scheduled check for upstream changes (runs every 6 hours)
  schedule:
    - cron: "0 */6 * * *"

  # Trigger when a webhook is received from upstream repo
  # Note: This requires setting up a GitHub webhook from the upstream repo
  repository_dispatch:
    types: [upstream-push]

# Only allow one translation workflow to run at a time
concurrency:
  group: translation-workflow
  cancel-in-progress: false

jobs:
  sync-and-translate:
    name: Sync Fork and Run Translation
    if: ${{ vars.TRANSLATION_ENABLED == 'true' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || vars.SCHEDULED_ENVIRONMENT || 'production' }}

    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache node_modules
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-modules-${{ runner.os }}-${{ hashFiles('bun.lock') }}

      - name: Install dependencies
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote and sync
        run: |
          git remote add upstream https://github.com/${{ vars.REPO_UPSTREAM_OWNER }}/${{ vars.REPO_UPSTREAM_NAME }}.git || true
          git fetch upstream
          git checkout -B main origin/main
          git merge upstream/main --ff-only || git merge upstream/main -X theirs --allow-unrelated-histories
          git push origin main

      # Restore SQLite database from previous runs
      # Cache is environment-specific to prevent dev/prod database conflicts
      - name: Restore SQLite cache
        uses: actions/cache/restore@v4
        with:
          path: |
            snapshots.sqlite
            snapshots.sqlite-journal
          key: sqlite-cache-${{ github.repository }}-${{ inputs.environment }}-${{ github.run_id }}
          restore-keys: |
            sqlite-cache-${{ github.repository }}-${{ inputs.environment }}-

      - name: Create .env file
        run: |
          cat > .env << EOF
          NODE_ENV=${{ vars.NODE_ENV }}
          BUN_ENV=${{ vars.BUN_ENV }}
          LOG_LEVEL=${{ vars.LOG_LEVEL }}
          GITHUB_TOKEN=${{ secrets.WORKFLOW_GITHUB_TOKEN }}
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          REPO_FORK_OWNER=${{ vars.REPO_FORK_OWNER }}
          REPO_FORK_NAME=${{ vars.REPO_FORK_NAME }}
          REPO_UPSTREAM_OWNER=${{ vars.REPO_UPSTREAM_OWNER }}
          REPO_UPSTREAM_NAME=${{ vars.REPO_UPSTREAM_NAME }}
          LLM_MODEL=${{ vars.LLM_MODEL }}
          OPENAI_BASE_URL=${{ vars.OPENAI_BASE_URL }}
          TARGET_LANGUAGE=${{ vars.TARGET_LANGUAGE }}
          LOG_TO_CONSOLE=${{ vars.LOG_TO_CONSOLE }}
          ENABLE_AUTO_MERGE=${{ vars.ENABLE_AUTO_MERGE }}
          EOF

      - name: Run translation workflow
        run: bun run start
        timeout-minutes: 120

      # Save SQLite database for next run
      # Cache is environment-specific to prevent dev/prod database conflicts
      - name: Save SQLite cache
        uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            snapshots.sqlite
            snapshots.sqlite-journal
          key: sqlite-cache-${{ github.repository }}-${{ inputs.environment }}-${{ github.run_id }}

      # Upload database as artifact for debugging/recovery
      - name: Upload database artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: translation-database-${{ github.run_id }}
          path: |
            snapshots.sqlite
            snapshots.sqlite-journal
          retention-days: 30

      # Upload logs
      - name: Upload logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: translation-logs-${{ github.run_id }}
          path: logs/
          retention-days: 7

      - name: Workflow summary
        if: always()
        run: |
          echo "## Translation Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment || vars.SCHEDULED_ENVIRONMENT || 'production' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow Run**: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
